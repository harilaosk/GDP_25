import tkinter as tk

bold_font_large = ('Helvetica', 12, 'bold')
bold_font_small = ('Helvetica', 10, 'bold')

# def create_main_window():
window = tk.Tk()
window.configure(bg='#ADD8E6')

window.geometry("625x500")
window.minsize(width=625, height=200)
window.maxsize(width=625, height=770)
# window.resizable(width=False, height=True)
# window.maxsize(width=800, height=window.winfo_screenheight())

window.title("Flight Mission Cycle Control Panel")

scrollbar = tk.Scrollbar(window)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

canvas = tk.Canvas(window, yscrollcommand=scrollbar.set)
canvas.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)

scrollbar.config(command=canvas.yview)

main_frame = tk.Frame(canvas, bg="#ADD8E6")
canvas.create_window((0, 0), window=main_frame, anchor='nw')


def on_frame_configure(event):
    canvas.config(scrollregion=canvas.bbox("all"))

main_frame.bind("<Configure>", on_frame_configure)

canvas.config(yscrollcommand=scrollbar.set)

canvas.config(scrollregion=canvas.bbox(tk.ALL))


def create_title_label(parent):
    label_title = tk.Label(
        parent,
        text="Follow the steps below to complete the mission cycle setup.",
        font=bold_font_large,
        fg="black",
        bg="#ADD8E6",
        width=60,
        height=2,
    )
    # label_title.grid(row=0, column=0)
    label_title.pack()


def create_buttons(parent):
    # frame_a = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    frame_a = tk.Frame(master=parent, bg="#ADD8E6")

    button_open = tk.Button(
        master=frame_a,
        text="Open",
        width=10,
        height=2,
        bg="white",
        fg="black",
    )

    button_save_as = tk.Button(
        master=frame_a,
        text="Save As",
        width=10,
        height=2,
        bg="white",
        fg="black",
    )

    # frame_a.grid(row=1, column=0)
    frame_a.pack()
    button_save_as.grid(row=0, column=0, padx=(0,5))
    button_open.grid(row=0, column=5, padx=(5,0))


def create_name_entry(parent):
    # frame_b = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    frame_b = tk.Frame(master=parent, bg="#ADD8E6")
    
    label_define_FMC = tk.Label(
        master=frame_b,
        text="Define a New Flight Mission Cycle:",
        font=bold_font_large,
        width=40,
        height=2,
        bg="#ADD8E6",
    )

    label_FMC_name = tk.Label(
        master=frame_b,
        text="Flight Mission Cycle Name:",
        font=bold_font_small,
        width=40,
        height=2,
        bg="#ADD8E6",
        )
    
    entry_FMC_name = tk.Entry(
        master=frame_b,
        width=30,
    )


    def on_entry_focus_in(event):
        if entry_FMC_name.get() == "Flight Mission Cycle Name Here":
            entry_FMC_name.delete(0, tk.END)

    def on_entry_focus_out(event):
        if entry_FMC_name.get() == "":
            entry_FMC_name.insert(0, "Flight Mission Cycle Name Here")

    entry_FMC_name.insert(0, "Flight Mission Cycle Name Here")
    entry_FMC_name.configure(justify=tk.CENTER)
    entry_FMC_name.bind("<FocusIn>", on_entry_focus_in)
    entry_FMC_name.bind("<FocusOut>", on_entry_focus_out)

    # frame_b.grid(row=2, column=0)
    frame_b.pack()
    label_define_FMC.grid(row=0, column=0)
    label_FMC_name.grid(row=1, column=0)
    entry_FMC_name.grid(row=2, column=0)


def create_activity_selection(parent):
    # frame_c = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    # frame_g = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    frame_c = tk.Frame(master=parent, bg="#ADD8E6")
    frame_g = tk.Frame(master=parent, bg="#ADD8E6")

    label_active = tk.Label(
        master=frame_c,
        text="Select Activities to Form a Flight Mission Cycle Batch:",
        font=bold_font_small,
        width=42,
        height=2,
        bg="#ADD8E6",
    )

    label_selected = tk.Label(
        master=frame_c,
        text="Selected:",
        font=bold_font_small,
        width=8,
        height=1,
        bg="#ADD8E6",
    )

    label_activity = tk.Label(
        master=frame_c,
        text="Activity:",
        font=bold_font_small,
        width=8,
        height=1,
        bg="#ADD8E6",
    )

    label_cycles = tk.Label(
        master=frame_c,
        text="Cycles:",
        font=bold_font_small,
        width=8,
        height=1,
        bg="#ADD8E6",
    )

    listbox = tk.Listbox(frame_c, width=25)
    listbox.grid(row=3, column=0, columnspan=3, sticky="nsew")

    for i in range(8):
        activity_frame = tk.Frame(listbox)
        activity_frame.pack(fill=tk.X)

        checkbox = tk.Checkbutton(activity_frame)
        checkbox.grid(row=0, column=1, padx=(75,0))

        activity_label = tk.Label(activity_frame, text="Activity" + str(i))
        activity_label.grid(row=0, column=0, padx=(28,0))

        entry_cycles = tk.Entry(activity_frame, width=8)
        entry_cycles.insert(0, "0")
        entry_cycles.configure(justify=tk.CENTER)
        entry_cycles.grid(row=0, column=2, sticky="e", padx=(75,0))
        
    scrollbar = tk.Scrollbar(frame_c, orient=tk.VERTICAL, command=listbox.yview)
    scrollbar.grid(row=3, column=3, sticky="ns")
    listbox.config(yscrollcommand=scrollbar.set)

    label_batch_cycles = tk.Label(
        master=frame_g,
        text="Cycles of Activity Batch:",
        font=bold_font_small,
        width=20,
        height=1,
        bg="#ADD8E6",
    )

    entry_batch_cycles = tk.Entry(frame_g, width=8)
    entry_batch_cycles.insert(0, "0")
    entry_batch_cycles.configure(justify=tk.CENTER)
    entry_batch_cycles.grid(row=0, column=1, sticky="w")


    # frame_c.grid(row=3, column=0)
    frame_c.pack()
    frame_g.pack()
    label_active.grid(row=0, column=0, columnspan=3)
    label_activity.grid(row=2, column=0)
    label_selected.grid(row=2, column=1)
    label_cycles.grid(row=2, column=2)
    label_batch_cycles.grid(row=0, column=0)


def create_activity(parent):
    # frame_d = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    # frame_e = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    frame_d = tk.Frame(master=parent, bg="#ADD8E6")
    frame_e = tk.Frame(master=parent, bg="#ADD8E6")

    label_new_activity = tk.Label(
        master=frame_d,
        text="Define a New Activity:",
        font=bold_font_large,
        width=40,
        height=2,
        bg="#ADD8E6",
    )

    label_new_activity_name = tk.Label(
        master=frame_d,
        text="New Activity Name:",
        font=bold_font_small,
        width=20,
        height=2,
        bg="#ADD8E6",
    )


    def on_entry_focus_in_activity(event):
        if entry_activity_name.get() == "New Activity Name Here":
            entry_activity_name.delete(0, tk.END)

    def on_entry_focus_out_activity(event):
        if entry_activity_name.get() == "":
            entry_activity_name.insert(0, "New Activity Name Here")
    
    entry_activity_name = tk.Entry(frame_d, width=30)
    entry_activity_name.insert(0, "New Activity Name Here")
    entry_activity_name.configure(justify=tk.CENTER)
    entry_activity_name.grid(row=1, column=1, columnspan=5, sticky="w", padx=(15,0))

    entry_activity_name.bind("<FocusIn>", on_entry_focus_in_activity)
    entry_activity_name.bind("<FocusOut>", on_entry_focus_out_activity)

    label_min = tk.Label(
        master=frame_e,
        text="Min:",
        font=bold_font_small,
        width=16,
        height=2,
        bg="#ADD8E6",
    )

    label_max = tk.Label(
        master=frame_e,
        text="Max:",
        font=bold_font_small,
        width=16,
        height=2,
        bg="#ADD8E6",
    )

    label_period = tk.Label(
        master=frame_e,
        text="Period:",
        font=bold_font_small,
        width=16,
        height=2,
        bg="#ADD8E6",
    )

    label_ROM = tk.Label(
        master=frame_e,
        text="Range of Motion Function:",
        font=bold_font_small,
        width=20,
        height=2,
        bg="#ADD8E6",
    )


    def on_entry_focus_in_ROM(event):
        if entry_ROM_min.get() == "ROM Min Here":
            entry_ROM_min.delete(0, tk.END)

    def on_entry_focus_out_ROM(event):
        if entry_ROM_min.get() == "":
            entry_ROM_min.insert(0, "ROM Min Here")

    entry_ROM_min = tk.Entry(frame_e, width=16)
    entry_ROM_min.insert(0, "ROM Min Here")
    entry_ROM_min.configure(justify=tk.CENTER)
    entry_ROM_min.grid(row=2, column=1, sticky="w", padx=(15,0))

    entry_ROM_min.bind("<FocusIn>", on_entry_focus_in_ROM)
    entry_ROM_min.bind("<FocusOut>", on_entry_focus_out_ROM)


    def on_entry_focus_in_ROM(event):
        if entry_ROM_max.get() == "ROM Max Here":
            entry_ROM_max.delete(0, tk.END)

    def on_entry_focus_out_ROM(event):
        if entry_ROM_max.get() == "":
            entry_ROM_max.insert(0, "ROM Max Here")

    entry_ROM_max = tk.Entry(frame_e, width=16)
    entry_ROM_max.insert(0, "ROM Max Here")
    entry_ROM_max.configure(justify=tk.CENTER)
    entry_ROM_max.grid(row=2, column=2, sticky="w", padx=(15,0))

    entry_ROM_max.bind("<FocusIn>", on_entry_focus_in_ROM)
    entry_ROM_max.bind("<FocusOut>", on_entry_focus_out_ROM)


    def on_entry_focus_in_ROM(event):
        if entry_ROM_period.get() == "ROM Period Here":
            entry_ROM_period.delete(0, tk.END)

    def on_entry_focus_out_ROM(event):
        if entry_ROM_period.get() == "":
            entry_ROM_period.insert(0, "ROM Period Here")

    entry_ROM_period = tk.Entry(frame_e, width=16)
    entry_ROM_period.insert(0, "ROM Period Here")
    entry_ROM_period.configure(justify=tk.CENTER)
    entry_ROM_period.grid(row=2, column=3, sticky="w", padx=(15,0))

    entry_ROM_period.bind("<FocusIn>", on_entry_focus_in_ROM)
    entry_ROM_period.bind("<FocusOut>", on_entry_focus_out_ROM)

    label_loading = tk.Label(
        master=frame_e,
        text="Loading Function:",
        font=bold_font_small,
        width=20,
        height=2,
        bg="#ADD8E6",
    )


    def on_entry_focus_in_load(event):
        if entry_loading_min.get() == "Load Min Here":
            entry_loading_min.delete(0, tk.END)

    def on_entry_focus_out_load(event):
        if entry_loading_min.get() == "":
            entry_loading_min.insert(0, "Load Min Here")

    entry_loading_min = tk.Entry(frame_e, width=16)
    entry_loading_min.insert(0, "Load Min Here")
    entry_loading_min.configure(justify=tk.CENTER)
    entry_loading_min.grid(row=3, column=1, sticky="w", padx=(15,0))

    entry_loading_min.bind("<FocusIn>", on_entry_focus_in_load)
    entry_loading_min.bind("<FocusOut>", on_entry_focus_out_load)


    def on_entry_focus_in_load(event):
        if entry_loading_max.get() == "Load Max Here":
            entry_loading_max.delete(0, tk.END)

    def on_entry_focus_out_load(event):
        if entry_loading_max.get() == "":
            entry_loading_max.insert(0, "Load Max Here")

    entry_loading_max = tk.Entry(frame_e, width=16)
    entry_loading_max.insert(0, "Load Max Here")
    entry_loading_max.configure(justify=tk.CENTER)
    entry_loading_max.grid(row=3, column=2, sticky="w", padx=(15,0))

    entry_loading_max.bind("<FocusIn>", on_entry_focus_in_load)
    entry_loading_max.bind("<FocusOut>", on_entry_focus_out_load)


    def on_entry_focus_in_load(event):
        if entry_loading_period.get() == "Load Period Here":
            entry_loading_period.delete(0, tk.END)

    def on_entry_focus_out_load(event):
        if entry_loading_period.get() == "":
            entry_loading_period.insert(0, "Load Period Here")

    entry_loading_period = tk.Entry(frame_e, width=16)
    entry_loading_period.insert(0, "Load Period Here")
    entry_loading_period.configure(justify=tk.CENTER)
    entry_loading_period.grid(row=3, column=3, sticky="w", padx=(15,0))

    entry_loading_period.bind("<FocusIn>", on_entry_focus_in_load)
    entry_loading_period.bind("<FocusOut>", on_entry_focus_out_load)

    # frame_d.grid(row=4, column=0)
    # frame_e.grid(row=5, column=0)
    frame_d.pack()
    frame_e.pack()
    label_new_activity.grid(row=0, column=0, columnspan=8, sticky="ew", pady=(15,0))
    label_new_activity_name.grid(row=1, column=0)
    label_min.grid(row=1, column=1)
    label_max.grid(row=1, column=2)
    label_period.grid(row=1, column=3)
    label_ROM.grid(row=2, column=0)
    label_loading.grid(row=3, column=0)


def create_active_buttons(parent):
    # frame_f = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    # frame_g = tk.Frame(master=parent, relief=tk.GROOVE, borderwidth=2, bg="#ADD8E6")
    frame_f = tk.Frame(master=parent, bg="#ADD8E6")
    frame_g = tk.Frame(master=parent, bg="#ADD8E6")
    button_add_active = tk.Button(
        master=frame_f,
        text="Add Actvity",
        width=12,
        height=2,
        bg="white",
        fg="black",
    )

    button_import_active = tk.Button(
        master=frame_g,
        text="Import Activity",
        width=12,
        height=2,
        bg="white",
        fg="black",
    )

    label_add_active = tk.Label(
        master=frame_f,
        text="Select 'Add Activity' when above fields have been completed:",
        font=bold_font_small,
        width=50,
        height=2,
        bg="#ADD8E6",
    )

    label_import_active = tk.Label(
        master=frame_g,
        text="Select 'Import Activity' to add an existing activity to the list:",
        font=bold_font_small,
        width=50,
        height=2,
        bg="#ADD8E6",
    )
    
    # frame_f.grid(row=6, column=0)
    # frame_g.grid(row=7, column=0)
    frame_f.pack()
    frame_g.pack()
    label_add_active.grid(row=0, column=0)
    label_import_active.grid(row=0, column=0)
    button_add_active.grid(row=0, column=1, padx=(0,0))
    button_import_active.grid(row=0, column=1, padx=(0,0))


def stop_application():
    window.destroy()

### Start of code

if __name__ == '__main__':
    # window = create_main_window()
    # main_frame = create_main_window()
    create_title_label(main_frame)
    create_buttons(main_frame)
    create_name_entry(main_frame)
    create_activity_selection(main_frame)
    create_activity(main_frame)
    create_active_buttons(main_frame)

    window.mainloop()